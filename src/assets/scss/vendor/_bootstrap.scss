/*!
 * Bootstrap v5.1.3 (https://getbootstrap.com/)
 * Copyright 2011-2021 The Bootstrap Authors
 * Copyright 2011-2021 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 */

////////////////////////////////////////////////////
// Configuration
////////////////////////////////////////////////////
@import "bootstrap/scss/functions";
@import "bootstrap/scss/variables";
@import "bootstrap/scss/mixins";
@import "bootstrap/scss/utilities";

////////////////////////////////////////////////////
// Utilities customization
// @see https://getbootstrap.com/docs/5.0/utilities/sizing/
// @see https://getbootstrap.com/docs/5.0/utilities/api/#using-the-api
// @see https://github.com/twbs/bootstrap/blob/v5.1.3/scss/_utilities.scss
////////////////////////////////////////////////////

$utilities: map-merge(
  $utilities,
  (
    "font-weight": (
      property: font-weight,
      class: fw,
      values: (
        extralight : $zaux-typo-fw-extralight,
        light : $zaux-typo-fw-light,
        normal: $zaux-typo-fw-regular,
        bold: $zaux-typo-fw-bold,
        extrabold: $zaux-typo-fw-extrabold,
        black: $zaux-typo-fw-black,
        extrablack: $zaux-typo-fw-extrablack
      ),
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "font-family": (
      property: font-family,
      class: font,
      values: (
        monospace: var(--#{$variable-prefix}font-monospace),
        zaux1: $zaux-font1,
        zaux2: $zaux-font2,
      ),
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "font-style": (
      property: font-style,
      class: font-style,
      responsive: true,
      values: (
        italic : italic
      ),
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "line-height": (
      property: line-height,
      class: lh,
      responsive: true,
      values: tokenTypo("lineHeights"),
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "font-size": (
      property: font-size,
      class: fs,
      responsive: true,
      values: tokenTypo("sizes"),
    ),
  )
);


$utilities: map-merge(
  $utilities,
  (
    "text-align": (
      "responsive" : true,
      "property" : "text-align",
      "class" : "text",
      "values" : (
        "left" : left,
        "center" : center,
        "right" : right
      )
    )
  )
);


//$utilities: map-merge(
  //$utilities,
  //(
    //"border": null,
  //)
//);

// $utilities: map-merge(
//   $utilities,
//   (
//     "border-top": null,
//   )
// );

// $utilities: map-merge(
//   $utilities,
//   (
//     "border-bottom": null,
//   )
// );

//$utilities: map-merge(
  //$utilities,
  //(
    //"border-end": null,
  //)
//);

//$utilities: map-merge(
  //$utilities,
  ///(
    //"border-start": null,
  //)
//);

//$utilities: map-merge(
  //$utilities,
  //(
    //"border-color": null,
  //)
//);

//$utilities: map-merge(
  //$utilities,
  //(
    //"border-width": null,
  //)
//);

$utilities: map-merge(
  $utilities,
  (
    "height": (
      responsive: true,
      property: height,
      class: h,
      values: (
        0: 0,
        16px : 16px,
        32px : 32px,
        64px : 64px,
        80px : 80px,
        128px : 128px,
        480px : 480px,
        600px : 600px,
        780px : 780px,
        390px : 390px,
        100: 100%,
        100vh : 100vh,
        auto: auto,
      ),
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "min-height": (
      responsive: true,
      property: min-height,
      class: mih,
      values: (
        auto: auto,
        780px : 780px,
        280px : 280px,
        390px : 390px
      ),
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "min-width": (
      responsive: true,
      property: min-width,
      class: miw,
      values: (
        128px : 128px,
        250px : 250px,
        500px : 500px,
        max-content : max-content,
        fit-content : fit-content,
        auto : auto
      ),
    ),
  )
);


$utilities: map-merge(
  $utilities,
  (
    "ls": (
      responsive: false,
      property: letter-spacing,
      class: ls,
      values: tokenTypo("letterSpacing"),
    ),
  )
);


$utilities: map-merge(
  $utilities,
  (
    "rounded": (
      responsive: true,
      property: border-radius,
      class: rounded,
      values: $zaux-token-radius,
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "opacity": null
  )
);

$utilities: map-merge(
  $utilities,
  (
    "rounded-top": null,
  )
);

$utilities: map-merge(
  $utilities,
  (
    "rounded-end": null,
  )
);

$utilities: map-merge(
  $utilities,
  (
    "rounded-bottom": null,
  )
);

$utilities: map-merge(
  $utilities,
  (
    "rounded-start": null,
  )
);


//$utilities: map-merge(
  //$utilities,
  //(
    //"translate-middle": null
  //)
//);

$utilities: map-merge(
  $utilities,
  (
    "position": (
      responsive: true,
      property: position,
      values: sticky static relative absolute fixed,
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "viewport-width": (
      responsive: true,
      property: width,
      class: vw,
      values: (
        10: 10vw,
        100vw: 100vw,
      ),
    ),
  )
);



$utilities: map-merge(
  $utilities,
  (
    "viewport-height": (
      responsive: true,
      property: height,
      class: vh,
      values: (
        10: 10vh,
        50: 50vh,
        100: 100vh,
      ),
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "shadow": (
      responsive: true,
      property: box-shadow,
      class: shadow,
      values: map-merge((none:none), tokenShadows()),
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "translate": (
      responsive: false,
      property: transform,
      class: tt,
      values: (
        "50-50": translate(50%, 50%),
        "n50-n50": translate(-50%, -50%),
      ),
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "translatex": null
  )
);

$utilities: map-merge(
  $utilities,
  (
    "translatey": null,
  )
);

$utilities: map-merge(
  $utilities,
  (
    "translatez": null
  )
);

$utilities: map-merge(
  $utilities,
  (
    "scale": null
  )
);

$utilities: map-merge(
  $utilities,
  (
    "end": null
  )
);

$utilities: map-merge(
  $utilities,
  (
    "width": (
      responsive: true,
      property: width,
      class: w,
      values: (
        vw40: 40vw,
        10 : 10%,
        20 : 20%,
        30 : 30%,
        40 : 40%,
        50 : 50%,
        60 : 60%,
        70 : 70%,
        80 : 80%,
        90 : 90%,
        100: 100%,
        16px: 16px,
        32px: 32px,
        64px: 64px,
        48px : 48px,
        120px: 120px,
        128px: 128px,
        160px: 160px,
        186px: 186px,
        190px: 190px,
        320px: 320px,
        424px: 424px,
        576px: 576px,
        auto: auto,
      ),
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "max-width": (
      responsive: true,
      property: max-width,
      class: maxw,
      values: (
        none : none,
        vw40: 40vw,
        10 : 10%,
        20 : 20%,
        30 : 30%,
        40 : 40%,
        50 : 50%,
        100: 100%,
        120px: 120px,
        128px: 128px,
        160px: 160px,
        190px: 190px,
        48px : 48px,
        186px: 186px,
        320px: 320px,
        424px: 424px,
        576px: 576px,
        880px: 880px,
        auto: auto,
      ),
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "min-width": (
      responsive: true,
      property: min-width,
      class: miw,
      values: (
        none : none,
        vw40: 40vw,
        10 : 10%,
        20 : 20%,
        30 : 30%,
        40 : 40%,
        50 : 50%,
        100: 100%,
        48px : 48px,
        120px: 120px,
        128px: 128px,
        160px: 160px,
        186px: 186px,
        190px: 190px,
        320px: 320px,
        424px: 424px,
        576px: 576px,
        880px: 880px,
        auto: auto,
      ),
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "transition": (
      responsive: false,
      property: transition,
      class: transi,
      values: (
        all-0: all $zaux-transition-0,
        all-1: all $zaux-transition-1,
        all-2: all $zaux-transition-2,
        none: none,
      ),
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "white-space": (
      responsive: true,
      property: white-space,
      class: ws,
      values: (
        wrap: normal,
        nowrap: nowrap,
      ),
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "back-blur": (
      responsive: true,
      property: backdrop-filter,
      class: back-blur,
      values : (
        1 : blur(tokenBlur(1))
      )
    )
  )
);

$utilities: map-merge(
  $utilities,
  (
    "blur": (
      responsive: true,
      property: filter,
      class: blur,
      values : (
        1 : blur(tokenBlur(1))
      )
    )
  )
);

$utilities: map-merge(
  $utilities,
  (
    "z-index": (
      responsive: true,
      property: z-index,
      class: zi,
      values: $zaux-index-layers
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "overflow": (
      responsive: true,
      property: overflow,
      values: (visible, hidden, scroll, auto, overlay),
    ),
  )
);

////////////////////////////////////////////////////
// Layout & components
////////////////////////////////////////////////////
@import "bootstrap/scss/root";
@import "bootstrap/scss/reboot";

// Import customized
// @import "bootstrap/scss/type";

////////////////////////////////////////////////////
// BEGIN part of "bootstrap/scss/type"
////////////////////////////////////////////////////

//
// Emphasis
//
.small {
  @extend small;
}

.mark {
  @extend mark;
}

//
// Lists
//
.list-unstyled {
  @include list-unstyled();
}

// Inline turns list items into inline-block
.list-inline {
  @include list-unstyled();
}
.list-inline-item {
  display: inline-block;

  &:not(:last-child) {
    margin-right: $list-inline-padding;
  }
}

//
// Misc
//

// Builds on `abbr`
.initialism {
  @include font-size($initialism-font-size);
  text-transform: uppercase;
}

// Blockquotes
.blockquote {
  margin-bottom: $blockquote-margin-y;
  @include font-size($blockquote-font-size);

  > :last-child {
    margin-bottom: 0;
  }
}

.blockquote-footer {
  margin-top: -$blockquote-margin-y;
  margin-bottom: $blockquote-margin-y;
  @include font-size($blockquote-footer-font-size);
  color: $blockquote-footer-color;

  &::before {
    content: "\2014\00A0"; // em dash, nbsp
  }
}
////////////////////////////////////////////////////
// END part of "bootstrap/scss/type"
////////////////////////////////////////////////////

// Import customized
// @import "bootstrap/scss/images";
@include generateResponsive(#{"."}img, fluid) {
  @include img-fluid();
}

// Import customized
// @import "bootstrap/scss/containers";
@if $enable-grid-classes {
  .container,
  [class*="container-"] {
    @include make-container();
  }

  @each $key, $value in $zaux-token-containers {
    .container-#{$key} {
      max-width: $value;
    }
    .container-half-#{$key} {
      max-width: $value / 2;
    }
    .container-1thrd-#{$key}{
      max-width:$value / 2.8;
    }
    @each $bp in tokenTypoBreakpoints() {
      @include media-breakpoint-up($bp){
          .container-#{$bp}-#{$key} {
            max-width: $value;
          }
          .container-#{$bp}-half-#{$key} {
            max-width: $value / 2;
          }
          .container-#{$bp}-1thrd-#{$key} {
            max-width: $value / 2.8;
          }
      }
    }
  }
}

:root{
  --container-padding-x: #{tokenSpacer(6)};
  @include media-breakpoint-up("lg"){
    --container-padding-x: #{tokenSpacer(0)};
  }
}

[class*="container-"] {
  transition: margin-right $zaux-transition-1, margin-left $zaux-transition-1;
}

[class*="container-"] {
  transition: margin-right $zaux-transition-1, margin-left $zaux-transition-1;
  padding-left: var(--container-padding-x);
  padding-right: var(--container-padding-x);
}


[class*="pb-md-"],
[class*="mb-md-"] {
  transition: padding-bottom $zaux-transition-1,
    margin-bottom $zaux-transition-1;
}

@import "bootstrap/scss/grid";
//@import "bootstrap/scss/forms/labels";
//@import "bootstrap/scss/forms/form-text";
//@import "bootstrap/scss/forms/form-control";
//@import "bootstrap/scss/forms/form-select";
//@import "bootstrap/scss/forms/form-check";
//@import "bootstrap/scss/forms/form-range";
// @import "bootstrap/scss/forms/floating-labels";
//@import "bootstrap/scss/forms/input-group";
// @import "bootstrap/scss/forms/validation";
//@import "bootstrap/scss/close";
@import "bootstrap/scss/transitions";
// @import "bootstrap/scss/accordion";
//@import "bootstrap/scss/modal";
// @import "bootstrap/scss/tables";
// @import "bootstrap/scss/buttons";
// @import "bootstrap/scss/dropdown";
// @import "bootstrap/scss/button-group";
// @import "bootstrap/scss/nav";
// @import "bootstrap/scss/navbar";
// @import "bootstrap/scss/card";
// @import "bootstrap/scss/breadcrumb";
// @import "bootstrap/scss/pagination";
// @import "bootstrap/scss/badge";
// @import "bootstrap/scss/alert";
// @import "bootstrap/scss/progress";
// @import "bootstrap/scss/list-group";
// @import "bootstrap/scss/toasts";
// @import "bootstrap/scss/tooltip";
// @import "bootstrap/scss/popover";
// @import "bootstrap/scss/carousel";
// @import "bootstrap/scss/spinners";
// @import "bootstrap/scss/offcanvas";
// @import "bootstrap/scss/placeholders";

////////////////////////////////////////////////////
// Helpers
////////////////////////////////////////////////////
@import "bootstrap/scss/helpers/clearfix";
@import "bootstrap/scss/helpers/position";
@import "bootstrap/scss/helpers/visually-hidden";
@import "bootstrap/scss/helpers/stretched-link";
@import "bootstrap/scss/helpers/text-truncation";
@import "bootstrap/scss/helpers/vr";
// @import "bootstrap/scss/helpers/colored-links";
// @import "bootstrap/scss/helpers/ratio";
// @import "bootstrap/scss/helpers/stacks";

////////////////////////////////////////////////////
// Utilities
////////////////////////////////////////////////////
@import "bootstrap/scss/utilities/api";

////////////////////////////////////////////////////
// These below are bootstrap's inner bundles, the inclusion of the single
// SCSS files (inside the bundles) are listed above in this file.
////////////////////////////////////////////////////
// @import "bootstrap/scss/forms";
// @import "bootstrap/scss/helpers";

////////////////////////////////////////////////////
// These below are bootstrap's inner bundles, the inclusion of the single
// SCSS files (inside the bundles) are listed above in this file.
////////////////////////////////////////////////////

@include onIE() {
  .visually-hidden {
    display: none;
  }
}
