{# Imports components #}
{% import 'components/icon/icon.njk' as Icon %}
{% import 'components/btn2/btn2.njk' as Button2 %}
{% import 'components/btn/btn.njk' as Button %}
{% import 'components/img/img.njk' as Img %}

{% macro content(obj) %}

    {% set componentClassName = 'c-sliderstrip1' %}

    {% set configDefault = {
        "className": [""],
        "variations" : ["nomaxh"],
        "titleTag" : "h3",
        "title" : "Slider strip title",
        "slidesPerView" : 4,
        "slidesPerViewMobile" : 1.2,
        "contained" : false,
        "overflow" : "hidden",
        "initialSlide" : 0,
        "slidesPerViewMd" : 2.5,
        "initialSlideMd" : 0,
        "cta" : {},
        "initialSlideMobile" : 0,
        "initialSlideXL" : 0,
        "slidesPerViewXL" : 5,
        "autoPlayOptions" : {
            "delay" : 5000
        },
        "spaceBetweenXL" : zaux_config.tokens.spaces['spacer-width-px'] * zaux_config.tokens.spaces.spaces[6].mul,
        "spaceBetween" : zaux_config.tokens.spaces['spacer-width-px'] * zaux_config.tokens.spaces.spaces[6].mul,
        "spaceBetweenMobile"  : zaux_config.tokens.spaces['spacer-width-px'] * zaux_config.tokens.spaces.spaces[5].mul,
        "arrowClasses" : ""
    }%}
 
    {% set obj = configDefault | overwriteMerge(obj or {}) %}
    {% set theme = "default" %}

    {# Creates new arrays for manipulation) #}
    {% set _className = [componentClassName] | mergeArray(obj.className or configDefault.className) %}

    {# Pushes every variation into class attribute (prepending the base class) #}
    {% for variation in ([] | mergeArray(obj.variations or configDefault.variations)) %}
        {% set _className = (_className.push(componentClassName +"--" + variation), _className) %}
        {% if "theme" in variation %}
            {% set theme = variation %}
        {% endif %}
    {% endfor %}

    {% if obj.contained == false %}
        {% set _className = (_className.push(componentClassName + "--arrows-out"), _className) %}
    {% endif %}

    {% set arrowVariations = ["primary", "size-m"] %}

    {% if theme == "theme-2" %}
        {% set arrowVariations = ["secondary", "size-m"] %}
    {% endif %}

    {% set sliderId = "sliderID" + range(1,1000) | random  %}
    
    <div class="{{_className | join(" ")}}">
        <div class="{{componentClassName}}__inner {% if obj.contained %}container-l{% endif %}">
            <div class="{{componentClassName}}__slider">
                <div data-slider-id={{sliderId}} data-js-component="Slider" class="c-slider swiper-container" 
                    data-config='{
                        "centeredSlides":false,
                        "speed":600,
                        "initialSlide" : {{obj.initialSlideMobile}},
                        "spaceBetween": {{obj.spaceBetweenMobile}},
                        "slidesPerView": {{obj.slidesPerViewMobile}},
                        {% if obj.autoPlayMobile == true %} 
                        "autoplay" : {
                            delay : obj.autoPlayOptions.delay
                        },
                        {% endif %}
                        "navigation": {
                            "nextEl": ".{{componentClassName}}__slider-arrow--next[data-slider-id={{sliderId}}]",
                            "prevEl": ".{{componentClassName}}__slider-arrow--prev[data-slider-id={{sliderId}}]"
                        },
                        "breakpoints" : {
                            {{token_breakpoints["md"] | dump | replace("px", "") | safe}}: {
                                "initialSlide" : {{obj.initialSlideMd}},
                                {% if obj.autoPlayMd == true %} 
                                "autoplay" : {
                                    delay : obj.autoPlayOptions.delay
                                },
                                {% endif %}
                                "spaceBetween": {{obj.spaceBetween}},
                                "slidesPerView": {{obj.slidesPerViewMd}}
                            },
                            {{token_breakpoints["lg"] | dump | replace("px", "") | safe}}: {
                                "initialSlide" : {{obj.initialSlide}},
                                {% if obj.autoPlay == true %} 
                                "autoplay" : {
                                    delay : obj.autoPlayOptions.delay
                                },
                                {% endif %}
                                "spaceBetween": {{obj.spaceBetweenXL}},
                                "slidesPerView": {{obj.slidesPerView}}
                            }
                        }
                    }'>
                    <div class="c-slider__wrapper overflow-visible overflow-lg-{{obj.overflow}}">
                        <div class="c-slider__instance swiper-container">
                            <div class="swiper-wrapper">
                                {% for element in obj.slides %}
                                    <div class="{{componentClassName}}__slide swiper-slide">
                                        {{ element.content | safe }}
                                    </div>
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                    
                </div>
            </div>
            <div data-slider-id="{{sliderId}}" class="{{componentClassName}}__slider-arrow {{componentClassName}}__slider-arrow--prev {{obj.arrowClasses}}">
                {{ Button.content({ "type" : "button", "variations" : arrowVariations, "iconOnly" : true, "iconSize" : "2", "hasIcon" : true, "icon" : "arrow1-left" }) }}
            </div>
            <div aria-label="Next slide" data-slider-id="{{sliderId}}" class="{{componentClassName}}__slider-arrow {{componentClassName}}__slider-arrow--next {{obj.arrowClasses}}">
                {{ Button.content({ "type" : "button", "variations" : arrowVariations, "iconOnly" : true, "iconSize" : "2", "hasIcon" : true, "icon" : "arrow1-right" }) }}
            </div>
        </div>
    </div>

{% endmacro %}