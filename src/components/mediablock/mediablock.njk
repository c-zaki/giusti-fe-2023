{# Imports components #}
{% import 'components/img/img.njk' as Img %}
{% import 'components/video/video.njk' as Video %}

{% macro content(obj) %}

    {% set componentClassName = 'c-mediablock' %}

    {% set configDefault = {
        "className": [""],
        "variations" : [],
        "mediaType" : "img",
        "img" : obj.img or component_mediablock.imgPlaceHolder,
        "video" : component_mediablock.video,
        "videoType" : "standard",
        "imgRatio" : ["ratio-1"],
        "fullView" : true,
        "transparentBg" : false
    }%}

    {% set obj = configDefault | overwriteMerge(obj or {}) %}

    {# Creates new arrays for manipulation) #}
    {% set _className = [componentClassName] | mergeArray(obj.className or configDefault.className) %}
    {% set imgRatio = obj.imgRatio %}

    {# Pushes every variation into class attribute (prepending the base class) #}
    {% for variation in ([] | mergeArray(obj.variations or configDefault.variations)) %}
        {% set _className = (_className.push(componentClassName +"--" + variation), _className) %}
    {% endfor %}

    {% if obj.transparentBg %}
        {% set _className = (_className.push(componentClassName + "--transparent"), _className) %}
    {% endif %}

    {% if obj.fullView == true %}
        {% set _className = (_className.push(componentClassName + "--fullviewport"), _className) %}
    {% endif %}

    {% if obj.contained == true %}
        {% set _className = (_className.push(componentClassName + "--contained"), _className) %}
        {% set imgRatio = ["fluid"] %}
    {% endif %}


    <div class="{{_className | join(" ") | trim}}">
        {% if obj.contained %}
        <div class="container-l container--spacing1">
        {% endif %}
        {% if obj.mediaType == 'img' %}
            <div class="{{componentClassName}}__media {{componentClassName}}__media--img">
                {{
                    Img.content({
                        "variations" : imgRatio,
                        "customAttr" : obj.img.customAttr or '',
                        "mainSrc" : obj.img.mainSrc,
                        "sourceList" : obj.img.sourceList,
                        "lazyLoad" : obj.img.lazyLoad or true
                    })
                }}
            </div>
        {% elif obj.mediaType == 'video' %}
            <div class="{{componentClassName}}__media {{componentClassName}}__media--video">
                {{
                    Video.content(
                        {   
                            "className" : ["h-100"],
                            "sourceList" : obj.video.srcList,
                            "options" : obj.video.options
                        }
                    )
                }}
            </div>
        {% endif %}
        {% if obj.contained %}
        </div>
        {% endif %}
    </div>

{% endmacro %}