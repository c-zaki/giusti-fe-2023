{# Imports components #}
{% import 'components/icon/icon.njk' as Icon %}

{% macro content(obj) %}

    {% set componentClassName = 'c-navbar2' %}

    {% set configDefault = {
        "className": [],
        "variations" : [],
        "initialSlide" : 0,
        "initialSlideMobile" : 0,
        "slidesPerView" : 12,
        "overflow" : "hidden",
        "overflowMobile" : "visible",
        "slidesPerViewMobile" : 2.5,
        "tabMode" : false,
        "contained" : false
    }%}
 
    {% set obj = configDefault | overwriteMerge(obj or {}) %}

    {# Creates new arrays for manipulation) #}
    {% set _className = [componentClassName] | mergeArray(obj.className or configDefault.className) %}

    {# Pushes every variation into class attribute (prepending the base class) #}
    {% for variation in ([] | mergeArray(obj.variations or configDefault.variations)) %}
        {% set _className = (_className.push(componentClassName +"--" + variation), _className) %}
    {% endfor %}

    {% set sliderId = "" | randomString() %}

    <div data-js-component="NavBar2" class="{{_className | join(" ") | trim}} {% if obj.contained == true %}px-4 px-md-8{% endif %}">
        <div class="{{componentClassName}}__slider overflow-visible overflow-md-hidden">
            <div data-slider-id="{{sliderId}}" data-js-component="Slider" class="c-slider swiper-container" 
                data-config='{
                    "centeredSlides":false,
                    "speed":600,
                    "initialSlide" : {{obj.initialSlideMobile}},
                    "spaceBetween": {{zaux_config.tokens.spaces['spacer-width-px'] * zaux_config.tokens.spaces.spaces[5].mul}},
                    "slidesPerView": {{obj.slidesPerViewMobile}},
                    "navigation": {
                        "nextEl": ".{{componentClassName}}__slider-arrow--next[data-slider-id={{sliderId}}]",
                        "prevEl": ".{{componentClassName}}__slider-arrow--prev[data-slider-id={{sliderId}}]"
                    },
                    "breakpoints" : {
                        {{token_breakpoints["md"] | dump | replace("px", "") | safe}}: {
                            "initialSlide" : {{obj.initialSlide}},
                            "spaceBetween": {{zaux_config.tokens.spaces['spacer-width-px'] * zaux_config.tokens.spaces.spaces[6].mul}},
                            "slidesPerView": {{obj.slidesPerView}}
                        }
                    }
                }'>
                <div class="c-slider__wrapper overflow-visible overflow-md-hidden">
                    <div class="c-slider__instance swiper-container">
                        <ul class="swiper-wrapper">
                            {% for tab in obj.tabs %}
                                <li class="{{componentClassName}}__slide swiper-slide">
                                    {% if obj.tabMode == true %}
                                        <button class="{{componentClassName}}__tab-selector pb-3 {% if tab.active %}--active{% endif %}" id="{{tab.id}}-tab" data-zaux-toggle="tab" data-zaux-group="{{obj.tabGroupId}}" data-zaux-target="#{{tab.id}}" type="button" role="tab" aria-controls="{{tab.id}}" aria-selected="true">
                                            {{tab.title}}
                                        </button>
                                    {% else %}
                                        <a class="{{componentClassName}}__tab-selector d-inline-block pb-3 {% if tab.active %}--active{% endif %}" href="{{tab.url}}" title="{{tab.title}}" {% if tab.target %}target="{{tab.target}}"{% endif %}>
                                            {{tab.title}}
                                        </a>
                                    {% endif %}
                                </li>
                            {% endfor %}
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        
        {#
        {% if obj.tabs %}
            <div class="{{componentClassName}}__tabs-content">
                {% for tab in obj.tabs %}
                    <div class="{{componentClassName}}__tab --active --fade --show" id="{{tab.id}}" role="tabpanel" data-zaux-tab-content data-zaux-group="{{tab.id}}-group" aria-labelledby="{{tab.id}}-tab">
                        {{tab.content | safe}}
                    </div>
                {% endfor %}
            </div>
        {% endif %}
        #}

    </div>

{% endmacro %}